* {
  scroll-behavior: smooth;
}

/* Tambahkan transisi untuk efek animasi */
#nav-link {
  position: relative;
  text-decoration: none;
  color: inherit; /* Sesuaikan warna teks dengan latar belakang */
}

/* Garis bawah */
#nav-link::after {
  content: "";
  position: absolute;
  left: 50%; /* Mulai dari tengah */
  bottom: 0;
  width: 0;
  height: 2px; /* Atur ketebalan garis */
  background-color: transparent; /* Warna garis */
  transition: width 0.3s ease-in-out, left 0.3s ease-in-out,
    background-color 0.3s ease-in-out; /* Transisi lebar, posisi, dan warna */
}

/* Animasi garis bawah saat dihover */
#nav-link:hover::after {
  width: 100%; /* Lebarkan garis saat dihover */
  left: 0; /* Geser garis dari kiri */
  background-color: #008000; /* Warna garis saat dihover */
}

#bar {
  background: rgba(255, 255, 255, 0.25);
  border-radius: 16px;
  box-shadow: 0 4px 30px rgba(0, 0, 0, 0.1);
  backdrop-filter: blur(7.1px);
  -webkit-backdrop-filter: blur(7.1px);
  border: 1px solid rgba(255, 255, 255, 0.3);
}
.read-more .text {
  max-height: 0;
  overflow: hidden;

  transition: max-height 1.5s ease-out;
}

.read-more.active .text {
  max-height: 1000px; /* Atur ketinggian sesuai kebutuhan */
}
#boxes,
i {
  transition: ease 0.2s;
}
#boxes:hover {
  cursor: pointer;
  background: #c0c0c0;
  transform: scale(1.1);
  h5,
  p {
    color: white;
  }
  i {
    color: yellow;
  }
  #p {
    color: yellow;
  }
}
:root {
  --primary: rgb(145, 197, 145);
  --btn: rgba(0, 0, 0, 0.15);
}

.slide {
  display: grid;
  place-items: center;
}

main {
  display: flex;
  flex-direction: column;
  align-items: center;
  overflow: hidden;
}


.slider {
  width: 80vh;
  height: 500px;
  list-style-type: none;
  display: flex;
  transition: transform 1.25s;
}

.item {
  position: relative;
  min-width: 100%;
  height: inherit;
  display: flex;
  align-items: center;

  & .testimonial {
    width: 65%;
    padding: 2rem;
    padding-right: 5rem;
    background-color: var(--primary);
    color: white;
    border-radius: 0.75rem;
    font: 100 0.7rem/1.6 helvetica, sans-serif;
    opacity: 0;
    transform: translateX(125px);

    & p {
      transform: translateY(20px);
      opacity: 0;
    }

    & p:nth-of-type(1) {
      font-weight: 900;
      font-size: 0.9rem;
    }

    & p:nth-of-type(2) {
      font-style: italic;
      font-weight: 400;
      margin-top: 1rem;
      font-size: 0.8rem;
      color: rgba(255, 255, 255, 0.7);
    }

    & p:nth-of-type(3) {
      color: rgba(255, 255, 255, 0.7);
      font-size: 0.65rem;
    }
  }

  & .image {
    position: absolute;
    right: 0;
    z-index: 10;
    width: 200px;
    aspect-ratio: 1;
    border-radius: 50%;
    object-fit: cover;
    transform: translateX(-25px);
  }
}

.animation {
  & .image {
    animation: image 1.25s ease-out forwards;
  }

  & .testimonial {
    animation: testimonial 1s ease-out forwards;

    & p:nth-of-type(1) {
      animation: content 1s forwards 0.75s;
    }
    & p:nth-of-type(2) {
      animation: content 1s forwards 1s;
    }
    & p:nth-of-type(3) {
      animation: content 1s forwards 1.25s;
    }
  }
}

@keyframes image {
  100% {
    transform: translateX(0);
  }
}

@keyframes testimonial {
  50% {
    opacity: 1;
  }
  100% {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes content {
  100% {
    opacity: 1;
    transform: translateY(0);
  }
}

.btn {
  width: 1.80rem;
  height: 1.80rem;
  border-radius: 1rem;
  border: none;
  background-color: var(--btn);
  cursor: pointer;
  margin: 0 0.1rem;
  transition:  0.4s;
}
.btn:hover{
  background-color: greenyellow;
}
.btn:focus{
  background-color: green;
}

.expand {
  width: 1.75rem;
}

.hamburger {
  cursor: pointer;
}

.hamburger input {
  display: none;
}

.hamburger svg {
  /* The size of the SVG defines the overall size */
  height: 3em;
  /* Define the transition for transforming the SVG */
  transition: transform 600ms cubic-bezier(0.4, 0, 0.2, 1);
}

.line {
  fill: none;
  stroke: black;
  stroke-linecap: round;
  stroke-linejoin: round;
  stroke-width: 3;
  /* Define the transition for transforming the Stroke */
  transition: stroke-dasharray 600ms cubic-bezier(0.4, 0, 0.2, 1),
              stroke-dashoffset 600ms cubic-bezier(0.4, 0, 0.2, 1);
}

.line-top-bottom {
  stroke-dasharray: 12 63;
}

.hamburger input:checked + svg {
  transform: rotate(-45deg);
}

.hamburger input:checked + svg .line-top-bottom {
  stroke-dasharray: 20 300;
  stroke-dashoffset: -32.42;
}
